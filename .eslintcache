[{"C:\\Users\\ngail\\Desktop\\100days-front\\src\\index.js":"1","C:\\Users\\ngail\\Desktop\\100days-front\\src\\App.js":"2","C:\\Users\\ngail\\Desktop\\100days-front\\src\\reportWebVitals.js":"3","C:\\Users\\ngail\\Desktop\\100days-front\\src\\Routes.js":"4","C:\\Users\\ngail\\Desktop\\100days-front\\src\\Navbar.js":"5","C:\\Users\\ngail\\Desktop\\100days-front\\src\\Home.js":"6","C:\\Users\\ngail\\Desktop\\100days-front\\src\\Login.js":"7","C:\\Users\\ngail\\Desktop\\100days-front\\src\\Profile.js":"8","C:\\Users\\ngail\\Desktop\\100days-front\\src\\Signup.js":"9","C:\\Users\\ngail\\Desktop\\100days-front\\src\\hooks\\useFields.js":"10","C:\\Users\\ngail\\Desktop\\100days-front\\src\\apiHelper.js":"11","C:\\Users\\ngail\\Desktop\\100days-front\\src\\ApiHelper.js":"12","C:\\Users\\ngail\\Desktop\\100days-front\\src\\UserProvider.js":"13","C:\\Users\\ngail\\Desktop\\100days-front\\src\\UserContext.js":"14","C:\\Users\\ngail\\Desktop\\100days-front\\src\\hooks\\useLocalStorage.js":"15","C:\\Users\\ngail\\Desktop\\100days-front\\src\\Logout.js":"16","C:\\Users\\ngail\\Desktop\\100days-front\\src\\EditProfile.js":"17","C:\\Users\\ngail\\Desktop\\100days-front\\src\\GoalItem.js":"18","C:\\Users\\ngail\\Desktop\\100days-front\\src\\NewGoal.js":"19","C:\\Users\\ngail\\Desktop\\100days-front\\src\\Today.js":"20","C:\\Users\\ngail\\Desktop\\100days-front\\src\\AmPostForm.js":"21","C:\\Users\\ngail\\Desktop\\100days-front\\src\\AmPost.js":"22","C:\\Users\\ngail\\Desktop\\100days-front\\src\\EditAmPost.js":"23"},{"size":500,"mtime":499162500000,"results":"24","hashOfConfig":"25"},{"size":456,"mtime":1611612418159,"results":"26","hashOfConfig":"25"},{"size":362,"mtime":499162500000,"results":"27","hashOfConfig":"25"},{"size":1652,"mtime":1611696254964,"results":"28","hashOfConfig":"25"},{"size":1499,"mtime":1611646530970,"results":"29","hashOfConfig":"25"},{"size":816,"mtime":1611257918600,"results":"30","hashOfConfig":"25"},{"size":1694,"mtime":1611370351821,"results":"31","hashOfConfig":"25"},{"size":2505,"mtime":1611704672163,"results":"32","hashOfConfig":"25"},{"size":2371,"mtime":1611466663703,"results":"33","hashOfConfig":"25"},{"size":505,"mtime":1611012233372,"results":"34","hashOfConfig":"25"},{"size":1984,"mtime":1611089389785,"results":"35","hashOfConfig":"25"},{"size":6141,"mtime":1611710180669,"results":"36","hashOfConfig":"25"},{"size":1724,"mtime":1611645953913,"results":"37","hashOfConfig":"25"},{"size":71,"mtime":1611087639750,"results":"38","hashOfConfig":"25"},{"size":476,"mtime":1610853302690,"results":"39","hashOfConfig":"25"},{"size":458,"mtime":1611099648966,"results":"40","hashOfConfig":"25"},{"size":1992,"mtime":1611600557641,"results":"41","hashOfConfig":"25"},{"size":3163,"mtime":1611708747579,"results":"42","hashOfConfig":"25"},{"size":4251,"mtime":1611603518089,"results":"43","hashOfConfig":"25"},{"size":1344,"mtime":1611702656348,"results":"44","hashOfConfig":"25"},{"size":3543,"mtime":1611647209829,"results":"45","hashOfConfig":"25"},{"size":1999,"mtime":1611710295485,"results":"46","hashOfConfig":"25"},{"size":3428,"mtime":1611702658909,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1d4rwlu",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"50"},"C:\\Users\\ngail\\Desktop\\100days-front\\src\\index.js",[],["100","101"],"C:\\Users\\ngail\\Desktop\\100days-front\\src\\App.js",[],"C:\\Users\\ngail\\Desktop\\100days-front\\src\\reportWebVitals.js",[],"C:\\Users\\ngail\\Desktop\\100days-front\\src\\Routes.js",[],"C:\\Users\\ngail\\Desktop\\100days-front\\src\\Navbar.js",[],"C:\\Users\\ngail\\Desktop\\100days-front\\src\\Home.js",[],"C:\\Users\\ngail\\Desktop\\100days-front\\src\\Login.js",[],"C:\\Users\\ngail\\Desktop\\100days-front\\src\\Profile.js",["102"],"import React,{useContext,useState, useEffect} from \"react\";\r\nimport {Link} from 'react-router-dom'\r\nimport UserContext from \"./UserContext\"\r\nimport './styles/Profile.css';\r\nimport ApiHelper from \"./ApiHelper\";\r\nimport EditProfile from \"./EditProfile\";\r\nimport GoalItem from './GoalItem';\r\n\r\nconst Profile = () => {\r\n    //display user info. Allow to edit.\r\n    //also list goals. And allow to edit\r\n    const {storedUser} = useContext(UserContext);\r\n    const { id, email, first_name, last_name, gender, location, goals } = storedUser //note: gender isn't\r\n    console.log(\"storedUser in Profile\", storedUser);\r\n\r\n    const [userGoals, setUserGoals] = useState(\"\");\r\n\r\n    useEffect(()=>{\r\n        //if goals.length>0 go find the goals\r\n        if(goals.length > 0){\r\n            loadGoals();\r\n            // const goalsDiv = userGoals.map((g => <div>{g.goal} started on {g.start_day}</div>))\r\n        }\r\n\r\n        async function loadGoals(){\r\n            const res =  await ApiHelper.getUserGoals();\r\n            console.log(\"PROFILE JS GOAL INFO\",res.goals)\r\n            setUserGoals(res.goals);//return all goals' info: id, userId, goal (str), start_day, user_def1, 2,3\r\n        }\r\n    },[goals.length])\r\n\r\n    //toggle edit user form \r\n\r\n    const [showEdit,setShowEdit] = useState(false);\r\n    const toggleEdit = () => {setShowEdit(!showEdit)}\r\n\r\n    return(<>\r\n        <h1>Profile Page</h1>\r\n        <button onClick={toggleEdit}>Edit Profile</button>\r\n        {showEdit ? <EditProfile id={id} first_name={first_name} last_name={last_name} location={location} /> :\r\n        <div className=\"profile\">\r\n            <div>\r\n                <b>Name:</b> <span>{first_name} {last_name}</span>\r\n            </div>\r\n            <div>\r\n                <b>Email:</b> <span>{email}</span>\r\n            </div>\r\n            <div>\r\n                <b>Location:</b> <span>{location}</span>\r\n            </div>\r\n        </div>\r\n        }\r\n\r\n        <h2>Goals</h2>\r\n        {goals.length === 0 || goals[0] === null ?  \r\n            <div>No goal started? Let's fix that --> <Link to=\"/goals\">Create a new goal</Link></div> :\r\n            <div>{userGoals ? \r\n                // userGoals.map(g => <div>\"{g.goal}\" started on {g.start_day.slice(0,10)}</div>) : \r\n                userGoals.map(g => <GoalItem key ={g.goal_id} goalObj = {g} setUserGoals={setUserGoals} userGoals={userGoals}/>) : \r\n                        <div>Loading goal info...</div>}</div>}\r\n\r\n                \r\n    </>)\r\n}\r\n\r\nexport default Profile;\r\n","C:\\Users\\ngail\\Desktop\\100days-front\\src\\Signup.js",["103"],"import React, {useContext} from \"react\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport useFields from \"./hooks/useFields\"\r\nimport ApiHelper from './ApiHelper';\r\nimport UserContext from \"./UserContext\"\r\n// import \"./styles/Signup.css\"\r\n\r\n\r\nconst Signup=()=>{\r\n    //sign up form \r\n    const history = useHistory();\r\n\r\n    const {setToken} = useContext(UserContext)\r\n    const [formData, setFormData, resetFormData] = useFields({email:\"\", password:\"\", first_name:\"\", last_name:\"\"})\r\n    \r\n    const handleSubmit = async (evt)=>{\r\n        evt.preventDefault();\r\n        const {email, password, first_name, last_name} = formData\r\n        let _token = await ApiHelper.signup(email, password, first_name,last_name);\r\n        setToken(_token);\r\n        resetFormData();\r\n        alert(\"Account Created!\")\r\n        //history.push to go to profile page or something\r\n    }\r\n\r\n    return(<>\r\n    <h2>Sign Up</h2>\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <label htmlFor=\"email\">Email </label>\r\n                <input \r\n                    type=\"text\"\r\n                    name = \"email\"\r\n                    value ={formData.email}\r\n                    onChange = {setFormData}\r\n                />\r\n            </div>\r\n            <div>\r\n                {/* put requirements for password here? */}\r\n                <label htmlFor =\"password\">Password </label>\r\n                <input  \r\n                    type=\"password\"\r\n                    name = \"password\"\r\n                    value ={formData.password}\r\n                    onChange = {setFormData}\r\n                />\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"first_name\">First Name </label>\r\n            \r\n                <input \r\n                    type=\"text\"\r\n                    name = \"first_name\"\r\n                    value ={formData.first_name}\r\n                    onChange = {setFormData}\r\n                />\r\n           </div> \r\n           <div>\r\n                <label htmlFor=\"last_name\">Last Name</label>\r\n                <input \r\n                    type=\"text\"\r\n                    name = \"last_name\"\r\n                    value ={formData.last_name}\r\n                    onChange = {setFormData}\r\n                />\r\n            </div>\r\n            <button> Sign Up!</button>\r\n        </form>\r\n\r\n    </>)\r\n}\r\n\r\nexport default Signup;","C:\\Users\\ngail\\Desktop\\100days-front\\src\\hooks\\useFields.js",["104"],"import React, { useState} from 'react';\r\n\r\n//can pass in validations or use Formik..\r\n\r\nconst useFields =(initialState)=>{\r\n    const [formData, setFormData] = useState(initialState);\r\n\r\n    const handleChange=(evt)=>{        \r\n        const {name,value} = evt.target;\r\n        setFormData(formData => ({...formData, [name]:value}));\r\n    }\r\n\r\n    const resetFormData = () =>{\r\n        setFormData(initialState)\r\n    }\r\n\r\n    return [formData, handleChange, resetFormData];\r\n}\r\n\r\nexport default useFields;","C:\\Users\\ngail\\Desktop\\100days-front\\src\\apiHelper.js",[],"C:\\Users\\ngail\\Desktop\\100days-front\\src\\ApiHelper.js",["105"],"C:\\Users\\ngail\\Desktop\\100days-front\\src\\UserProvider.js",[],"C:\\Users\\ngail\\Desktop\\100days-front\\src\\UserContext.js",[],"C:\\Users\\ngail\\Desktop\\100days-front\\src\\hooks\\useLocalStorage.js",[],"C:\\Users\\ngail\\Desktop\\100days-front\\src\\Logout.js",[],"C:\\Users\\ngail\\Desktop\\100days-front\\src\\EditProfile.js",[],"C:\\Users\\ngail\\Desktop\\100days-front\\src\\GoalItem.js",["106"],"C:\\Users\\ngail\\Desktop\\100days-front\\src\\NewGoal.js",[],"C:\\Users\\ngail\\Desktop\\100days-front\\src\\Today.js",["107","108","109","110"],"import React,{useEffect,useState, useContext} from 'react';\r\nimport {useParams} from 'react-router-dom'\r\nimport UserContext from \"./UserContext\"\r\nimport AmPostForm from './AmPostForm';\r\nimport AmPost from './AmPost'\r\nimport EditAmPost from './EditAmPost'\r\nimport ApiHelper from './ApiHelper';\r\nconst dayjs = require('dayjs');\r\n\r\nconst Today = ({goalId})=>{\r\n    let { day } = useParams();\r\n\r\n    const curDay = new dayjs().format('MMMM D, YYYY')\r\n    //if today has posted info, then show it, else. show form\r\n    const [postInfo, setPostInfo] = useState({});\r\n\r\n    const blankAm = {gratitude_am:\"\", big_goal:\"\", task1:\"\", task2:\"\", task3:\"\"}\r\n\r\n    useEffect(()=>{\r\n        async function fetchPosts(){\r\n\r\n            const res = await ApiHelper.getDayPosts(goalId, day)\r\n            console.log(\"RES USEFFECT TODAY\",res) \r\n            setPostInfo(res) //could be blank, need to check not goalid or day to get info\r\n        }\r\n        \r\n        fetchPosts();\r\n    },[day])\r\n\r\n    return(<>\r\n    <h1>{curDay}</h1>\r\n    { postInfo[\"gratitude_am\"] || postInfo[\"ten\"] ? <AmPost post={postInfo} setPostInfo={setPostInfo}/> : <EditAmPost edit={false} postInfo={blankAm} goalId ={goalId} day={day}/> }\r\n    {/* { postInfo ? <AmPost post={postInfo}/> : <AmPostForm edit={false} goalId ={goalId} day={day}/> } */}\r\n    </>)\r\n}\r\n\r\nexport default Today;","C:\\Users\\ngail\\Desktop\\100days-front\\src\\AmPostForm.js",[],"C:\\Users\\ngail\\Desktop\\100days-front\\src\\AmPost.js",[],"C:\\Users\\ngail\\Desktop\\100days-front\\src\\EditAmPost.js",["111"],"import React, { useEffect} from 'react';\r\n// import {useHistory} from 'react-router-dom';\r\nimport useFields from \"./hooks/useFields\";\r\nimport ApiHelper from './ApiHelper';\r\n\r\nconst EditAmPost = ({postInfo, edit, goalId, day, closeModal, setPostInfo})=>{\r\n\r\n    const [formData, setFormData, resetFormData] = useFields(postInfo);\r\n\r\n    const handleSubmit = async (evt)=>{\r\n        evt.preventDefault();\r\n        if(edit){\r\n            const {gratitude_am, big_goal, task1, task2, task3} = formData; //formData may have additional fields from other posttypes from API\r\n            const postObj = {gratitude_am, big_goal, task1, task2, task3};\r\n            await ApiHelper.editAmPost(+postInfo.goal_id, day, postObj);\r\n            // pass state up to parent so it updates..\r\n            setPostInfo(postObj);\r\n\r\n            closeModal();\r\n        } else {\r\n            await ApiHelper.createAmPost(goalId, day, formData) \r\n        }\r\n            \r\n        resetFormData();\r\n        //ideally on submit, it would come back to this page with everything all filled out and pretty.\r\n    }\r\n    // const {gratitude_am, big_goal, task1, task2, task3} = formData;\r\n    // for(let key in INITIAL_STATE){\r\n    //     if(INITIAL_STATE[key] == null){\r\n    //         INITIAL_STATE[key] = \"\"\r\n    //     } \r\n    //     if(key==='start_day'){\r\n    //         INITIAL_STATE.start_day = INITIAL_STATE.start_day.split('T')[0] \r\n    //     }\r\n    // }\r\n    // const startDay = dayjs(storedUser[\"start_days\"][0])\r\n    // console.log(\"GOAL ONE\", dayjs().diff(startDay,'day'))\r\n    // const dayDiff =  dayjs().diff(startDay,'day')\r\n    return (<div>\r\n        <h2>Today is a good day</h2>\r\n        <form onSubmit={handleSubmit} className=\"border-box\">\r\n            <div>\r\n                <label htmlFor=\"gratitude_am\">Today, I am grateful for: </label>\r\n                <input \r\n                    type=\"text\"\r\n                    name = \"gratitude_am\"\r\n                    value ={formData.gratitude_am}\r\n                    onChange = {setFormData}\r\n                />\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"big_goal\">My 100-day goal is: </label>\r\n                <input \r\n                    type=\"text\"\r\n                    name = \"big_goal\"\r\n                    value ={formData.big_goal}\r\n                    onChange = {setFormData}\r\n                />\r\n            </div>\r\n            <div>By completing these tasks, I will be closer to my goal:</div>\r\n            <div>\r\n                <input \r\n                    type=\"text\"\r\n                    name = \"task1\"\r\n                    placeholder=\"1.\"\r\n                    value ={formData.task1}\r\n                    onChange = {setFormData}\r\n                />\r\n            </div>\r\n            <div>\r\n                <input \r\n                    type=\"text\"\r\n                    name = \"task2\"\r\n                    placeholder=\"2.\"\r\n                    value ={formData.task2}\r\n                    onChange = {setFormData}\r\n                />\r\n            </div>\r\n            <div>\r\n                <input \r\n                    type=\"text\"\r\n                    name = \"task3\"\r\n                    placeholder=\"3.\"\r\n                    value ={formData.task3}\r\n                    onChange = {setFormData}\r\n                />\r\n            </div>\r\n            <button>Sieze this day!</button>\r\n        </form>\r\n    </div>)\r\n}\r\n\r\nexport default EditAmPost;\r\n",{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":13,"column":47,"nodeType":"118","messageId":"119","endLine":13,"endColumn":53},{"ruleId":"116","severity":1,"message":"120","line":11,"column":11,"nodeType":"118","messageId":"119","endLine":11,"endColumn":18},{"ruleId":"116","severity":1,"message":"121","line":1,"column":8,"nodeType":"118","messageId":"119","endLine":1,"endColumn":13},{"ruleId":"122","severity":1,"message":"123","line":39,"column":11,"nodeType":"124","messageId":"125","endLine":39,"endColumn":35,"fix":"126"},{"ruleId":"116","severity":1,"message":"127","line":38,"column":13,"nodeType":"118","messageId":"119","endLine":38,"endColumn":16},{"ruleId":"116","severity":1,"message":"128","line":1,"column":35,"nodeType":"118","messageId":"119","endLine":1,"endColumn":45},{"ruleId":"116","severity":1,"message":"129","line":3,"column":8,"nodeType":"118","messageId":"119","endLine":3,"endColumn":19},{"ruleId":"116","severity":1,"message":"130","line":4,"column":8,"nodeType":"118","messageId":"119","endLine":4,"endColumn":18},{"ruleId":"131","severity":1,"message":"132","line":28,"column":7,"nodeType":"133","endLine":28,"endColumn":12,"suggestions":"134"},{"ruleId":"116","severity":1,"message":"135","line":1,"column":17,"nodeType":"118","messageId":"119","endLine":1,"endColumn":26},"no-native-reassign",["136"],"no-negated-in-lhs",["137"],"no-unused-vars","'gender' is assigned a value but never used.","Identifier","unusedVar","'history' is assigned a value but never used.","'React' is defined but never used.","no-useless-computed-key","Unnecessarily computed property [\"params\"] found.","Property","unnecessarilyComputedProperty",{"range":"138","text":"139"},"'res' is assigned a value but never used.","'useContext' is defined but never used.","'UserContext' is defined but never used.","'AmPostForm' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'goalId'. Either include it or remove the dependency array.","ArrayExpression",["140"],"'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",[1424,1434],"\"params\"",{"desc":"141","fix":"142"},"Update the dependencies array to be: [day, goalId]",{"range":"143","text":"144"},[968,973],"[day, goalId]"]