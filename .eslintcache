[{"C:\\Users\\ngail\\Desktop\\100days-front\\src\\index.js":"1","C:\\Users\\ngail\\Desktop\\100days-front\\src\\App.js":"2","C:\\Users\\ngail\\Desktop\\100days-front\\src\\reportWebVitals.js":"3","C:\\Users\\ngail\\Desktop\\100days-front\\src\\Routes.js":"4","C:\\Users\\ngail\\Desktop\\100days-front\\src\\Navbar.js":"5","C:\\Users\\ngail\\Desktop\\100days-front\\src\\Home.js":"6","C:\\Users\\ngail\\Desktop\\100days-front\\src\\Login.js":"7","C:\\Users\\ngail\\Desktop\\100days-front\\src\\Profile.js":"8","C:\\Users\\ngail\\Desktop\\100days-front\\src\\Signup.js":"9","C:\\Users\\ngail\\Desktop\\100days-front\\src\\hooks\\useFields.js":"10","C:\\Users\\ngail\\Desktop\\100days-front\\src\\apiHelper.js":"11","C:\\Users\\ngail\\Desktop\\100days-front\\src\\ApiHelper.js":"12","C:\\Users\\ngail\\Desktop\\100days-front\\src\\UserProvider.js":"13","C:\\Users\\ngail\\Desktop\\100days-front\\src\\UserContext.js":"14","C:\\Users\\ngail\\Desktop\\100days-front\\src\\hooks\\useLocalStorage.js":"15","C:\\Users\\ngail\\Desktop\\100days-front\\src\\Logout.js":"16","C:\\Users\\ngail\\Desktop\\100days-front\\src\\EditProfile.js":"17","C:\\Users\\ngail\\Desktop\\100days-front\\src\\GoalItem.js":"18","C:\\Users\\ngail\\Desktop\\100days-front\\src\\NewGoal.js":"19","C:\\Users\\ngail\\Desktop\\100days-front\\src\\Today.js":"20","C:\\Users\\ngail\\Desktop\\100days-front\\src\\AmPost.js":"21","C:\\Users\\ngail\\Desktop\\100days-front\\src\\EditAmPost.js":"22","C:\\Users\\ngail\\Desktop\\100days-front\\src\\About.js":"23","C:\\Users\\ngail\\Desktop\\100days-front\\src\\ProtectedRoute.js":"24","C:\\Users\\ngail\\Desktop\\100days-front\\src\\PmPost.js":"25","C:\\Users\\ngail\\Desktop\\100days-front\\src\\EditPmPost.js":"26","C:\\Users\\ngail\\Desktop\\100days-front\\src\\NoGoal.js":"27","C:\\Users\\ngail\\Desktop\\100days-front\\src\\TenPost.js":"28","C:\\Users\\ngail\\Desktop\\100days-front\\src\\EditTenPost.js":"29"},{"size":500,"mtime":499162500000,"results":"30","hashOfConfig":"31"},{"size":456,"mtime":1611612418159,"results":"32","hashOfConfig":"31"},{"size":362,"mtime":499162500000,"results":"33","hashOfConfig":"31"},{"size":3818,"mtime":1612290939114,"results":"34","hashOfConfig":"31"},{"size":1765,"mtime":1612215958518,"results":"35","hashOfConfig":"31"},{"size":816,"mtime":1611257918600,"results":"36","hashOfConfig":"31"},{"size":1813,"mtime":1612299159148,"results":"37","hashOfConfig":"31"},{"size":2475,"mtime":1612299202210,"results":"38","hashOfConfig":"31"},{"size":3242,"mtime":1612214570906,"results":"39","hashOfConfig":"31"},{"size":602,"mtime":1612198499837,"results":"40","hashOfConfig":"31"},{"size":1984,"mtime":1611089389785,"results":"41","hashOfConfig":"31"},{"size":5709,"mtime":1612298329198,"results":"42","hashOfConfig":"31"},{"size":1912,"mtime":1612214971843,"results":"43","hashOfConfig":"31"},{"size":71,"mtime":1611087639750,"results":"44","hashOfConfig":"31"},{"size":635,"mtime":1612202223978,"results":"45","hashOfConfig":"31"},{"size":458,"mtime":1611099648966,"results":"46","hashOfConfig":"31"},{"size":2185,"mtime":1611872582846,"results":"47","hashOfConfig":"31"},{"size":4320,"mtime":1612208848524,"results":"48","hashOfConfig":"31"},{"size":4158,"mtime":1611943303371,"results":"49","hashOfConfig":"31"},{"size":3539,"mtime":1612299396133,"results":"50","hashOfConfig":"31"},{"size":2037,"mtime":1612218378047,"results":"51","hashOfConfig":"31"},{"size":3649,"mtime":1612291989336,"results":"52","hashOfConfig":"31"},{"size":231,"mtime":1611784428638,"results":"53","hashOfConfig":"31"},{"size":671,"mtime":1611958139687,"results":"54","hashOfConfig":"31"},{"size":2626,"mtime":1612299186096,"results":"55","hashOfConfig":"31"},{"size":6259,"mtime":1612152010011,"results":"56","hashOfConfig":"31"},{"size":222,"mtime":1612215358570,"results":"57","hashOfConfig":"31"},{"size":3387,"mtime":1612299787290,"results":"58","hashOfConfig":"31"},{"size":11753,"mtime":1612300855699,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"1d4rwlu",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"62"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"62"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"62"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"62"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"62"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"62"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ngail\\Desktop\\100days-front\\src\\index.js",[],["127","128"],"C:\\Users\\ngail\\Desktop\\100days-front\\src\\App.js",[],"C:\\Users\\ngail\\Desktop\\100days-front\\src\\reportWebVitals.js",[],"C:\\Users\\ngail\\Desktop\\100days-front\\src\\Routes.js",["129"],"import React,{useContext} from \"react\";\r\nimport {Route, Switch, Redirect, Link} from 'react-router-dom';\r\nimport Home from \"./Home\";\r\nimport Profile from \"./Profile\"\r\nimport Logout from './Logout'\r\nimport UserContext from \"./UserContext\"\r\nimport NewGoal from \"./NewGoal\";\r\nimport Today from \"./Today\";\r\nimport About from './About'\r\nimport ProtectedRoute from './ProtectedRoute'\r\nconst dayjs = require('dayjs');\r\n\r\nconst Routes =()=>{\r\n/* Home page is a simple welcome page\r\nLogin allows user to log in or sign up\r\nProfile displays profile information + allows user to edit  \r\nGoals displays Goal information + allows to edit. May combine with  Profile page\r\n*/\r\n    let dayDiff;\r\n    const {storedUser, startDay,goalId} = useContext(UserContext);\r\n    console.log(\"storedUser FROM ROUTES\", storedUser)\r\n    if(startDay){ \r\n        dayDiff =  dayjs().diff(startDay,'day')\r\n    }\r\n        // goalId = storedUser[\"goals\"][0];\r\n    \r\n\r\n\r\nreturn(<Switch>\r\n\r\n    <ProtectedRoute exact path=\"/profile\">\r\n        <Profile/>\r\n    </ProtectedRoute>\r\n\r\n    <ProtectedRoute exact path=\"/logout\">\r\n        <Logout />\r\n    </ProtectedRoute>\r\n\r\n    <ProtectedRoute exact path=\"/goals\">\r\n       <NewGoal />\r\n    </ProtectedRoute>\r\n    \r\n    <ProtectedRoute exact path=\"/journal/NaN\">\r\n         <div>Let's <Link to=\"/goals\">create a new goal</Link> before journaling</div> \r\n    </ProtectedRoute>\r\n\r\n    <ProtectedRoute exact path=\"/journal/:day\">\r\n        <Today goalId = {goalId} />        \r\n    </ProtectedRoute>\r\n    \r\n    <Route exact path=\"/about\">\r\n        <About />\r\n    </Route>\r\n\r\n    <Route  exact path=\"/home\">\r\n        {storedUser ? <Redirect to=\"/profile\" /> : <Home/>}\r\n    </Route>\r\n\r\n    <Redirect to=\"/home\" />\r\n\r\n</Switch>\r\n// const PublicRoutes = <Switch>\r\n//      <Route exact path=\"/profile\">\r\n//         <Profile /> \r\n//     </Route>\r\n\r\n//     <Route exact path=\"/logout\">\r\n//         <Logout />\r\n//     </Route>\r\n\r\n//     <ProtectedRoute exact path=\"/goals\">\r\n//         <NewGoal />\r\n//     </ProtectedRoute>\r\n\r\n//     {/* <ProtectedRoute exact path=\"/journal/NaN\">\r\n//         {storedUser.goals[0] ?  <Redirect to=\"/\" /> : <div>Let's <Link to=\"/goals\">create a new goal</Link> before journaling</div> } \r\n//     </ProtectedRoute> */}\r\n\r\n//     <ProtectedRoute exact path=\"/journal/:day\">\r\n//         {storedUser? console.log(\"JOURNAL PATH STORED USER\", storedUser): console.log(\"JOURNAL PATH No stored user\")}\r\n//         <Today goalId = {goalId} />\r\n//     </ProtectedRoute>\r\n\r\n//     <Route exact path=\"/about\">\r\n//         <About />\r\n//     </Route>\r\n\r\n//     <Route exact path=\"/\">\r\n//         <Redirect to=\"/profile\" />\r\n//     </Route>\r\n// </Switch>;\r\n///////////////////////\r\n// <Switch>  \r\n\r\n//     <Route exact path=\"/profile\">\r\n//        {storedUser ? <Profile /> : <Redirect to=\"/\" /> } \r\n//     </Route>\r\n\r\n//     <Route exact path=\"/logout\">\r\n//         <Logout />\r\n//     </Route>\r\n\r\n//     <Route exact path=\"/goals\">\r\n//     {storedUser ? <NewGoal /> : <Redirect to=\"/\" /> } \r\n//         {/* <NewGoal /> */}\r\n//     </Route>\r\n\r\n//     <Route exact path=\"/journal/NaN\">\r\n//         {storedUser ? \r\n//         {storedUser.goals[0] ?  <Redirect to=\"/\" /> : <div>Let's <Link to=\"/goals\">create a new goal</Link> before journaling</div> } \r\n//         :  <Redirect to=\"/\" /> }\r\n//         </Route>\r\n\r\n//     <Route exact path=\"/journal/:day\">\r\n//         {storedUser? console.log(\"JOURNAL PATH STORED USER\", storedUser): console.log(\"JOURNAL PATH No stored user\")}\r\n//         {storedUser ? <Today goalId = {goalId} /> : <Redirect to=\"/\" /> } \r\n//     </Route>\r\n\r\n//     <Route exact path=\"/about\">\r\n//         <About />\r\n//     </Route>\r\n\r\n//     <Route exact path=\"/\">\r\n//         {storedUser ? <Redirect to=\"/profile\" /> : <Home />} \r\n//     </Route>\r\n\r\n// </Switch>\r\n)\r\n}\r\nexport default Routes;","C:\\Users\\ngail\\Desktop\\100days-front\\src\\Navbar.js",[],"C:\\Users\\ngail\\Desktop\\100days-front\\src\\Home.js",[],"C:\\Users\\ngail\\Desktop\\100days-front\\src\\Login.js",[],"C:\\Users\\ngail\\Desktop\\100days-front\\src\\Profile.js",[],"C:\\Users\\ngail\\Desktop\\100days-front\\src\\Signup.js",["130","131"],"import React, {useContext} from \"react\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport useLocalStorage from './hooks/useLocalStorage'\r\nimport useFields from \"./hooks/useFields\"\r\nimport ApiHelper from './ApiHelper';\r\nimport UserContext from \"./UserContext\"\r\n// import \"./styles/Signup.css\"\r\n\r\n\r\nconst Signup=()=>{\r\n    //sign up form \r\n    const history = useHistory();\r\n    const {setToken, setStoredUser} = useContext(UserContext)\r\n\r\n    const [formData, setFormData, resetFormData] = useFields({email:\"\", password:\"\", password2:\"\", first_name:\"\", last_name:\"\"})\r\n    \r\n    const handleSubmit = async (evt)=>{\r\n        evt.preventDefault();\r\n        if(formData.password == formData.password2 ){\r\n            const {email, password, first_name, last_name} = formData\r\n            let _token = await ApiHelper.signup(email, password, first_name,last_name);\r\n            setToken(_token);\r\n            setStoredUser({email,password,first_name,last_name})\r\n            // setStoredUser({...currentUser[0]})\r\n            resetFormData();\r\n            alert(\"Account Created!\")\r\n            history.push(\"/profile\")\r\n        } else {\r\n            alert(\"Passwords must match\")\r\n        }\r\n        //history.push to go to profile page or something\r\n    }\r\n\r\n    return(<>\r\n    <h2>Sign Up</h2>\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <label htmlFor=\"email\">Email </label>\r\n                <input \r\n                    type=\"text\"\r\n                    name = \"email\"\r\n                    value ={formData.email}\r\n                    onChange = {setFormData}\r\n                />\r\n            </div>\r\n            <div>\r\n                {/* put requirements for password here? */}\r\n                <label htmlFor =\"password\">Password </label>\r\n                <input  \r\n                    type=\"password\"\r\n                    name = \"password\"\r\n                    value ={formData.password}\r\n                    onChange = {setFormData}\r\n                />\r\n            </div>\r\n            <div>\r\n                {/* put requirements for password here? */}\r\n                <label htmlFor =\"password2\">Re-Type Password </label>\r\n                <input  \r\n                    type=\"password\"\r\n                    name = \"password2\"\r\n                    value ={formData.password2}\r\n                    onChange = {setFormData}\r\n                />\r\n            </div>\r\n            {formData.password !== formData.password2 ? <div>Passwords don't match</div> : \"\"}\r\n            <div>\r\n                <label htmlFor=\"first_name\">First Name </label>\r\n            \r\n                <input \r\n                    type=\"text\"\r\n                    name = \"first_name\"\r\n                    value ={formData.first_name}\r\n                    onChange = {setFormData}\r\n                />\r\n           </div> \r\n           <div>\r\n                <label htmlFor=\"last_name\">Last Name</label>\r\n                <input \r\n                    type=\"text\"\r\n                    name = \"last_name\"\r\n                    value ={formData.last_name}\r\n                    onChange = {setFormData}\r\n                />\r\n            </div>\r\n            <button> Sign Up!</button>\r\n        </form>\r\n\r\n    </>)\r\n}\r\n\r\nexport default Signup;","C:\\Users\\ngail\\Desktop\\100days-front\\src\\hooks\\useFields.js",["132"],"import React, { useState} from 'react';\r\n\r\n//can pass in validations or use Formik..\r\n/*custom hook to handle forms. Returns formData, handleChange (aka setFormData) and reset form */\r\nconst useFields =(initialState)=>{\r\n    const [formData, setFormData] = useState(initialState);\r\n\r\n    const handleChange=(evt)=>{        \r\n        const {name,value} = evt.target;\r\n        setFormData(formData => ({...formData, [name]:value}));\r\n    }\r\n\r\n    const resetFormData = () =>{\r\n        setFormData(initialState)\r\n    }\r\n\r\n    return [formData, handleChange, resetFormData];\r\n}\r\n\r\nexport default useFields;","C:\\Users\\ngail\\Desktop\\100days-front\\src\\apiHelper.js",[],"C:\\Users\\ngail\\Desktop\\100days-front\\src\\ApiHelper.js",[],"C:\\Users\\ngail\\Desktop\\100days-front\\src\\UserProvider.js",["133","134","135"],"import React, {useEffect, useState } from 'react';\r\nimport UserContext from \"./UserContext\";\r\nimport useLocalStorage from \"./hooks/useLocalStorage\";\r\nimport ApiHelper from './ApiHelper'\r\nimport { decode } from \"jsonwebtoken\";\r\n\r\n\r\nconst UserProvider = ({children}) => {\r\n\r\n    //used  in Routes: {setToken, storedUser,setStoredUser}\r\n    //used in Navbar {storedUser}\r\n    // const [currentUser,setCurrentUser] = useLocalStorage('user',null);\r\n\r\n    //storedUser is in Context\r\n  const [storedUser, setStoredUser ]= useState(null) //changing storedUser to keep in here as state\r\n    //token is stored in Local Storage\r\n  const [token, setToken] =useLocalStorage('_token',\"\"); //token has email, password, goals [], user_id, (goals') start_days[]\r\n// //pass setToken to login and signUp\r\n  const [goalId, setGoalId] = useLocalStorage('_goalId',\"\");\r\n  const [startDay, setStartDay] = useLocalStorage('_startDay',\"\");\r\n  \r\n\r\n  useEffect(()=>{\r\n\r\n    getUser(token);\r\n\r\n    async function getUser(token){\r\n      console.log(\"GET USER TOKEN\", token)\r\n      try {\r\n        let decodedToken = decode(token)\r\n        \r\n        if(decodedToken){\r\n          console.log(\"TOKEN DECODED!\", decodedToken)\r\n          let {id, goals,start_days} = decodedToken;\r\n          let currentUser = await ApiHelper.getUser(id);\r\n          if(goals[0]){\r\n            setGoalId(goals[0]);\r\n            setStartDay(start_days[0])\r\n          }\r\n          setStoredUser({...currentUser[0]}); //set storedUser to uesrInfo \r\n          console.log(\"should be the new stored user\", {...currentUser[0]})\r\n        }\r\n      } catch (err) {\r\n          console.error(\"error\",err)\r\n        setStoredUser(null);\r\n      }\r\n    }\r\n  },[token,setStoredUser]);\r\n\r\n\r\n    return (\r\n        <UserContext.Provider value ={{setToken, storedUser,setStoredUser}}>\r\n            {children}\r\n        </UserContext.Provider>\r\n    )\r\n}\r\n\r\nexport default UserProvider;","C:\\Users\\ngail\\Desktop\\100days-front\\src\\UserContext.js",[],"C:\\Users\\ngail\\Desktop\\100days-front\\src\\hooks\\useLocalStorage.js",[],"C:\\Users\\ngail\\Desktop\\100days-front\\src\\Logout.js",[],"C:\\Users\\ngail\\Desktop\\100days-front\\src\\EditProfile.js",[],"C:\\Users\\ngail\\Desktop\\100days-front\\src\\GoalItem.js",["136"],"import React,{useState, useContext} from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport useFields from \"./hooks/useFields\"\r\nimport ApiHelper from './ApiHelper';\r\nimport UserContext from \"./UserContext\";\r\n\r\nconst GoalItem = ({goalObj, setUserGoals, userGoals}) =>{\r\n    const {setToken, setGoalId} = useContext(UserContext)\r\n\r\n    const [showEdit, setShowEdit] = useState(false);\r\n    const [showDelete, setShowDelete] = useState(false);\r\n\r\n    const handleClick =()=>{\r\n        setShowEdit(!showEdit)\r\n    }\r\n    const handleModalClose = () => {\r\n        setShowDelete(false);\r\n    }\r\n\r\n    const { goal_id, ...INITIAL_STATE } = goalObj; //remove goal_id from inital state.\r\n\r\n    for(let key in INITIAL_STATE){\r\n        if(INITIAL_STATE[key] == null){\r\n            INITIAL_STATE[key] = \"\"\r\n        } \r\n        if(key==='start_day'){\r\n            INITIAL_STATE.start_day = INITIAL_STATE.start_day.split('T')[0] \r\n        }\r\n    }\r\n    \r\n    // const [formData, setFormData] = useFields({goal:goalObj.goal, start_day:goalObj.start_day, user_def1:goalObj.user_def1, user_def2:goalObj.user_def2, user_def3:goalObj.user_def3})\r\n    const [formData, setFormData] = useFields(INITIAL_STATE)\r\n    const handleSubmit = async (evt) => {\r\n        evt.preventDefault();\r\n        let res = await ApiHelper.updateGoal(goalObj.goal_id, formData);\r\n        if(res){\r\n            \r\n            let newUserGoals = userGoals.map(g => g.goal_id === goalObj.goal_id ? {...formData, goal_id:goalObj.goal_id} : g)\r\n            setUserGoals(newUserGoals);\r\n            setShowEdit(!showEdit);\r\n        }\r\n    }\r\n    \r\n\r\n    const deleteGoal =async ()=>{\r\n        let res = await ApiHelper.deleteGoal(goal_id)\r\n        let newUserGoals = userGoals.filter(g => g.goal_id !== goalObj.goal_id )\r\n        console.log(\"NEW USERGOALS after delete\", newUserGoals)\r\n        setUserGoals(newUserGoals);\r\n        setToken(res._token);\r\n        localStorage.removeItem('_goalId');\r\n        localStorage.removeItem('_startDay');\r\n    }\r\n\r\n    const editGoalForm = <form onSubmit = {handleSubmit} className=\"border-box\">\r\n    <div>\r\n        <label htmlFor=\"goal\">Goal </label>\r\n        <input \r\n            type=\"textarea\"\r\n            name = \"goal\"\r\n            value ={formData.goal}\r\n            onChange = {setFormData}\r\n        />\r\n    </div>\r\n    <div>\r\n        <label htmlFor=\"start_day\">Start Date </label>\r\n        <input \r\n            type=\"date\"\r\n            name = \"start_day\"\r\n            value ={formData.start_day}\r\n            onChange = {setFormData}\r\n        />\r\n    </div>\r\n    <div>\r\n        <label htmlFor=\"user_def1\">Unique metric (1)</label>\r\n        <input \r\n            type=\"text\"\r\n            name = \"user_def1\"\r\n            value ={formData.user_def1}\r\n            onChange = {setFormData}\r\n        />\r\n    </div>\r\n    <div>\r\n        <label htmlFor=\"user_def2\">Unique metric (2)</label>\r\n        <input \r\n            type=\"text\"\r\n            name = \"user_def2\"\r\n            value ={formData.user_def2}\r\n            onChange = {setFormData}\r\n        />\r\n    </div>\r\n    <div>\r\n        <label htmlFor=\"user_def3\">Unique metric (3)</label>\r\n        <input \r\n            type=\"text\"\r\n            name = \"user_def3\"\r\n            value ={formData.user_def3}\r\n            onChange = {setFormData}\r\n        />\r\n    </div>\r\n    <button>Update Goal</button>\r\n</form>\r\n\r\n    return(<>\r\n    <div>\r\n        \"{goalObj.goal}\" started on {goalObj.start_day.slice(0,10)}\r\n\r\n        <Button onClick={handleClick} variant=\"secondary\" >Edit Goal</Button>\r\n\r\n        <Button onClick={()=>setShowDelete(true)} variant=\"danger\" >Delete Goal</Button>\r\n\r\n        {showEdit ? editGoalForm : \"\"}\r\n\r\n        {/* Modal for confirm delete */}\r\n        <Modal show={showDelete} onHide={handleModalClose} animation={true}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Are you sure you want to delete this goal?</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n            Once you've deleted a goal, all the associated posts with it are gone. Forever.\r\n            <Button onClick={deleteGoal} variant=\"danger\">Delete Goal</Button>\r\n            <Button>Keep Goal</Button>\r\n        </Modal.Body>\r\n      </Modal>\r\n\r\n    </div>\r\n    \r\n    </>)\r\n}\r\n\r\n\r\nexport default GoalItem;","C:\\Users\\ngail\\Desktop\\100days-front\\src\\NewGoal.js",[],"C:\\Users\\ngail\\Desktop\\100days-front\\src\\Today.js",["137","138","139","140","141"],"import React,{useEffect,useState, useContext, Component} from 'react';\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport UserContext from \"./UserContext\"\r\nimport AmPost from './AmPost'\r\nimport PmPost from './PmPost'\r\nimport EditAmPost from './EditAmPost'\r\nimport EditPmPost from './EditPmPost'\r\nimport ApiHelper from './ApiHelper';\r\nimport './styles/Today.css'\r\nimport NoGoal from './NoGoal';\r\nimport EditTenPost from './EditTenPost';\r\nimport TenPost from './TenPost';\r\n\r\nconst dayjs = require('dayjs');\r\n\r\nconst Today = ()=>{\r\n    // const {goalId,start_day} = useContext(UserContext); //not sure why this works on refresh?? I'm not exporting the values...\r\n    const goalId = localStorage.getItem(\"_goalId\");\r\n    console.log(\"what is goal id?\",goalId)\r\n    const start_day = localStorage.getItem(\"_startDay\")\r\n    let { day } = useParams();\r\n    \r\n    //change curday to startday + day from params using dayjs\r\n    let curDay = dayjs(start_day).add(+day, 'day').format('MMMM D, YYYY') \r\n    \r\n    //if today has posted info, then show it, else. show form\r\n    const [postInfo, setPostInfo] = useState({});\r\n    \r\n    const [isAm, setIsAm] = useState(dayjs().hour() < 13); //is a Bool\r\n\r\n    const blankAm = {gratitude_am:\"\", big_goal:\"\", task1:\"\", task2:\"\", task3:\"\"}\r\n    const blankPm = {gratitude_pm:\"\",  obstacle1:\"\", obstacle2:\"\", obstacle3:\"\", solution1:\"\", solution2:\"\", solution3:\"\", discipline:\"\", overall_day:\"\", reflect:\"\"}\r\n    const blankTen = {accomplished:\"\", win1:\"\", win2:\"\", win3:\"\", win_plan1:\"\", win_plan2:\"\", win_plan3:\"\", bad1:\"\", bad2:\"\", bad3:\"\", solution1:\"\", solution2:\"\", solution3:\"\", microgoal:\"\" }\r\n    \r\n    console.log(\"JUST CHECKING\", typeof +day,\"mod 10\", +day%10 === 0 ,\"daynot zero\", +day !==0)\r\n\r\n    useEffect(()=>{\r\n        if(goalId){\r\n            console.log(\"TODAY USEEFFECT\", goalId)\r\n            fetchPosts();\r\n        }\r\n\r\n        async function fetchPosts(){\r\n            const res = await ApiHelper.getDayPosts(goalId, day)\r\n            console.log(\"TODAYJS RES USEFFECT fetchPOSTS \", res) \r\n            setPostInfo(res) //could be blank, need to check not goalid or day to get info\r\n        }\r\n    },[day, goalId])\r\n\r\n    if(!goalId){\r\n        return(<NoGoal/>)\r\n    } else{\r\n        return(<>\r\n        <h2>{curDay}</h2>\r\n        <h4>Today is a good day</h4>\r\n        <div>\r\n            {day >= 1 ? <Link to={`/journal/${day-1}`} ><i className=\"fas fa-chevron-left\"></i>Prev Day  </Link> : <div className=\"inactive\">You're at the first day</div>}\r\n            <span>| Day {day} |</span>\r\n            {day < 100 ? <Link to={`/journal/${+day+1}`} > Next Day <i className=\"fas fa-chevron-right\"></i> </Link> : <div className=\"inactive\">You're at the last day!</div>}\r\n        </div>\r\n        \r\n        { postInfo[\"gratitude_am\"]  ? <AmPost post={postInfo} setPostInfo={setPostInfo}/> : <EditAmPost edit={false} postInfo={{...postInfo, ...blankAm}} goalId ={goalId}  setPostInfo={setPostInfo}/> }\r\n        \r\n        { postInfo[\"gratitude_pm\"]  ? <PmPost post={postInfo} setPostInfo={setPostInfo}/> : <EditPmPost edit={false} postInfo={{...postInfo, ...blankPm}} goalId ={goalId} setPostInfo={setPostInfo}/> }\r\n        \r\n        { (+day%10 === 0 && +day !==0) && postInfo[\"ten\"] ? <TenPost post={postInfo} setPostInfo={setPostInfo}/> : \"\"}\r\n        \r\n        {(+day%10 === 0 && +day !==0) && !postInfo[\"ten\"] ? <EditTenPost edit={false} postInfo={{...postInfo, ten:blankTen}} goalId ={goalId} setPostInfo={setPostInfo}/> :\"\" }\r\n        \r\n        </>)\r\n    }\r\n}\r\n\r\nexport default Today;","C:\\Users\\ngail\\Desktop\\100days-front\\src\\AmPost.js",["142"],"import React,{useState} from 'react';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport './styles/AmPost.css'\r\nimport EditAmPost from './EditAmPost'\r\nimport ApiHelper from './ApiHelper';\r\n\r\nconst AmPost = ({post, setPostInfo})=>{\r\n    \r\n    const {gratitude_am, big_goal, task1, task2, task3, goal_id, day} = post\r\n\r\n    const [showEdit, setShowEdit] = useState(false);\r\n    const handleClose = () => {\r\n        setShowEdit(false);\r\n    }\r\n\r\n    const deletePost = async () => {\r\n      let res = await ApiHelper.deletePost(post.goal_id, day,\"am\")\r\n      console.log(\"Delete post\", res)\r\n      //update AM Post/ today?\r\n      const {gratitude_am, big_goal, task1, task2, task3,...keepVals} =post\r\n      let newPost = {keepVals}\r\n      console.log(\"NEWPOST & KEEPER\", keepVals)\r\n      setPostInfo(keepVals)\r\n    }\r\n    const handleShow = () => setShowEdit(true);\r\n\r\n    return (<div>   \r\n        <h3>AM</h3> \r\n\r\n        <Button variant=\"primary\" onClick={handleShow}>\r\n        Edit Post <i className=\"fas fa-edit\"></i>\r\n        </Button>\r\n        <Button  variant=\"danger\" onClick = {deletePost}><i className=\"far  fa-trash-alt\"></i></Button>\r\n\r\n        <Modal show={showEdit} onHide={handleClose} animation={true}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Edit Post</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n            <EditAmPost postInfo={post} edit={true} goalId ={goal_id} day={day} closeModal = {handleClose} setPostInfo={setPostInfo}/>\r\n        </Modal.Body>\r\n      </Modal>\r\n\r\n\r\n        <div className=\"border-box\">\r\n\r\n        <h5>Today, I am grateful for: </h5>\r\n        <p>{gratitude_am}</p>\r\n        <h5>My 100-day goal is: </h5>\r\n        <p>{big_goal}</p>\r\n        <h5>Today's tasks:</h5>\r\n            <ol>\r\n              {task1 && <li>{task1}</li>}\r\n              {task2 && <li>{task2}</li>}\r\n              {task3 && <li>{task3}</li>}\r\n            </ol>\r\n           \r\n        </div>\r\n        \r\n    </div>)\r\n}\r\n\r\nexport default AmPost;\r\n","C:\\Users\\ngail\\Desktop\\100days-front\\src\\EditAmPost.js",[],"C:\\Users\\ngail\\Desktop\\100days-front\\src\\About.js",[],"C:\\Users\\ngail\\Desktop\\100days-front\\src\\ProtectedRoute.js",["143","144"],"import React, { useContext } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport UserContext from \"./UserContext\"\r\n\r\nconst ProtectedRoute = ({ component: Component, storedUser, ...rest }) => {\r\n  \r\n    return (\r\n      <Route {...rest} render={ props => {\r\n          if (storedUser) {\r\n            return <Component {...rest} {...props} />\r\n          } else {\r\n            return <Redirect to={\r\n              {\r\n                pathname: '/',\r\n                state: {\r\n                  from: props.location\r\n                }\r\n              }\r\n            } />\r\n          }\r\n        }\r\n      } />\r\n    )\r\n  }\r\n  \r\n  export default ProtectedRoute;","C:\\Users\\ngail\\Desktop\\100days-front\\src\\PmPost.js",[],"C:\\Users\\ngail\\Desktop\\100days-front\\src\\EditPmPost.js",[],"C:\\Users\\ngail\\Desktop\\100days-front\\src\\NoGoal.js",[],"C:\\Users\\ngail\\Desktop\\100days-front\\src\\TenPost.js",["145","146"],"C:\\Users\\ngail\\Desktop\\100days-front\\src\\EditTenPost.js",[],{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","severity":1,"message":"152","line":23,"column":9,"nodeType":"153","messageId":"154","endLine":23,"endColumn":16},{"ruleId":"151","severity":1,"message":"155","line":3,"column":8,"nodeType":"153","messageId":"154","endLine":3,"endColumn":23},{"ruleId":"156","severity":1,"message":"157","line":19,"column":30,"nodeType":"158","messageId":"159","endLine":19,"endColumn":32},{"ruleId":"151","severity":1,"message":"160","line":1,"column":8,"nodeType":"153","messageId":"154","endLine":1,"endColumn":13},{"ruleId":"151","severity":1,"message":"161","line":19,"column":10,"nodeType":"153","messageId":"154","endLine":19,"endColumn":16},{"ruleId":"151","severity":1,"message":"162","line":20,"column":10,"nodeType":"153","messageId":"154","endLine":20,"endColumn":18},{"ruleId":"163","severity":1,"message":"164","line":48,"column":5,"nodeType":"165","endLine":48,"endColumn":26,"suggestions":"166"},{"ruleId":"151","severity":1,"message":"167","line":9,"column":22,"nodeType":"153","messageId":"154","endLine":9,"endColumn":31},{"ruleId":"151","severity":1,"message":"168","line":1,"column":35,"nodeType":"153","messageId":"154","endLine":1,"endColumn":45},{"ruleId":"151","severity":1,"message":"169","line":1,"column":47,"nodeType":"153","messageId":"154","endLine":1,"endColumn":56},{"ruleId":"151","severity":1,"message":"170","line":3,"column":8,"nodeType":"153","messageId":"154","endLine":3,"endColumn":19},{"ruleId":"151","severity":1,"message":"171","line":29,"column":12,"nodeType":"153","messageId":"154","endLine":29,"endColumn":16},{"ruleId":"151","severity":1,"message":"172","line":29,"column":18,"nodeType":"153","messageId":"154","endLine":29,"endColumn":25},{"ruleId":"151","severity":1,"message":"173","line":23,"column":11,"nodeType":"153","messageId":"154","endLine":23,"endColumn":18},{"ruleId":"151","severity":1,"message":"168","line":1,"column":17,"nodeType":"153","messageId":"154","endLine":1,"endColumn":27},{"ruleId":"151","severity":1,"message":"170","line":3,"column":8,"nodeType":"153","messageId":"154","endLine":3,"endColumn":19},{"ruleId":"151","severity":1,"message":"174","line":8,"column":8,"nodeType":"153","messageId":"154","endLine":8,"endColumn":12},{"ruleId":"151","severity":1,"message":"175","line":24,"column":11,"nodeType":"153","messageId":"154","endLine":24,"endColumn":14},"no-native-reassign",["176"],"no-negated-in-lhs",["177"],"no-unused-vars","'dayDiff' is assigned a value but never used.","Identifier","unusedVar","'useLocalStorage' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'React' is defined but never used.","'goalId' is assigned a value but never used.","'startDay' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setGoalId' and 'setStartDay'. Either include them or remove the dependency array.","ArrayExpression",["178"],"'setGoalId' is assigned a value but never used.","'useContext' is defined but never used.","'Component' is defined but never used.","'UserContext' is defined but never used.","'isAm' is assigned a value but never used.","'setIsAm' is assigned a value but never used.","'newPost' is assigned a value but never used.","'Form' is defined but never used.","'res' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"179","fix":"180"},"Update the dependencies array to be: [token, setStoredUser, setGoalId, setStartDay]",{"range":"181","text":"182"},[1694,1715],"[token, setStoredUser, setGoalId, setStartDay]"]